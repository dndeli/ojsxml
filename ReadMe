#CSV to OJS XML Import
This application will convert a csv file into the ojs xml native import file.
The XSD is here:
https://github.com/pkp/ojs/blob/ojs-stable-3_1_0/plugins/importexport/native/native.xsd
and
https://github.com/pkp/pkp-lib/blob/master/plugins/importexport/native/pkp-native.xsd


 The CSV must be in the format of:
 issueTitle,sectionTitle,sectionAbbrev,authors,articleTitle,year,datePublished,volume,issue,startPage,endPage,articleAbstract,galleyLabel,authorEmail,fileName,keywords

 You can have multiple authors in the "authors" field by separating them with a semi-colon.
 Also, use a comma to separating first and last names.
 Example:
 Smith, John;Johnson, Jane ...

Note: This is NOT a comprehensive csv to ojs xml conversion and many fields are left out.

##How to Use
1. Rename docroot/config.inc.TEMPLATE.php to config.inc.php. Setup the variables in docroot/config.inc.php file.
..* this script can either use a mysqlite db or a mysql database to group data together so username/password/host/database name is required if using mysql.
..* The $PDF_URL variable is the URL where the PDF files are located the filename in the csv field is appended to the value of the $PDF_URL. So the PDF files will need to be web accessible.
2. Place CSV file(s) in docroot/csv directory
..* You can place multiple csv files in the directory however do not split a single issue across multiple csv files. But you can have multiple issues in a single csv file
3. Run generateXml.php
4. the xml file(s) will be output in the docroot/output directory

#Users to XML Import

This will convert a CSV file into ojs 3 users xml import.

##How to Use
1. Enter in user data unto the examples\users.xlsx files
2. Save the file as a CSV to  docroot\csv\users\*.csv
3. Run "php generateUsersXml.php" from the command line